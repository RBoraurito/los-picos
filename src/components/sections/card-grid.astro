---
import clsx from 'clsx';
import { urlForImage } from '~/lib/image-resolver';
import type { SectionType } from '~/types/helper';
import { Button } from '../button';
import { resolveLink } from '~/lib/resolve-link';

export type Props = SectionType<'cards-grid'>

const { title, cards, bgImage, variant, titleTag } = Astro.props;
const TitleTag = titleTag ?? 'p';

const imageUrl = bgImage ? urlForImage(bgImage).url() : undefined;
---

<div class={clsx("py-24 sm:py-32 bg-center bg-cover bg-no-repeat relative")} style={`background-image: url(${imageUrl});`}>
  <div class={clsx("inset-0 absolute", {
  'bg-primary-600/90': variant === 'default'
})}></div>
  <div class="relative mx-auto max-w-2xl px-6 lg:max-w-7xl lg:px-8 bg">
    <TitleTag class="mt-2 text-pretty text-4xl font-semibold tracking-tight text-white sm:text-6xl mb-4 sm:mb-8 font-display">
      {title}
    </TitleTag>
    <div class="grid lg:grid-cols-3 gap-6">
      {cards?.map(card => (
          <div class="bg-white relative py-12 px-8 flex items-center text-center h-full flex-col overflow-hidden rounded-md">
            {card.image && (
              <img
                src={urlForImage(card.image).url()}
                alt={card.title}
                class="h-28 w-28 object-cover rounded-full aspect-square mb-12"
              />
            )}
              <p class="mt-2 text-lg font-bold uppercase tracking-tight text-primary-600">{card.title}</p>
              <div class="mt-2 mb-4 max-w-lg text-sm/6 text-gray-600" set:html={card.content}></div>
              {card.cta && (
                <Button as='a' {...resolveLink(card.cta)}>
                  {card.cta.title}
                </Button>
              )}
          </div>
      ))}
    </div>
  </div>
</div>
